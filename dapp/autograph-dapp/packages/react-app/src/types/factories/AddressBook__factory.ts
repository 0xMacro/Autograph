/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AddressBook, AddressBookInterface } from "../AddressBook";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EntryNotFound",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwnerAccess",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addressBook",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum IAddressBook.Tipology",
            name: "tipology",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "entryAddress",
            type: "address",
          },
          {
            internalType: "string[]",
            name: "labels",
            type: "string[]",
          },
        ],
        indexed: false,
        internalType: "struct IAddressBook.Entry",
        name: "entry",
        type: "tuple",
      },
    ],
    name: "EntryAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addressBook",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum IAddressBook.Tipology",
            name: "tipology",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "entryAddress",
            type: "address",
          },
          {
            internalType: "string[]",
            name: "labels",
            type: "string[]",
          },
        ],
        indexed: false,
        internalType: "struct IAddressBook.Entry",
        name: "entry",
        type: "tuple",
      },
    ],
    name: "EntryDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addressBook",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum IAddressBook.Tipology",
            name: "tipology",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "entryAddress",
            type: "address",
          },
          {
            internalType: "string[]",
            name: "labels",
            type: "string[]",
          },
        ],
        indexed: false,
        internalType: "struct IAddressBook.Entry",
        name: "entry",
        type: "tuple",
      },
    ],
    name: "EntryUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string[]",
        name: "names",
        type: "string[]",
      },
      {
        internalType: "enum IAddressBook.Tipology[]",
        name: "tipologies",
        type: "uint8[]",
      },
      {
        internalType: "address[]",
        name: "entryAddresses",
        type: "address[]",
      },
      {
        internalType: "string[][]",
        name: "labels",
        type: "string[][]",
      },
    ],
    name: "addEntries",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum IAddressBook.Tipology",
            name: "tipology",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "entryAddress",
            type: "address",
          },
          {
            internalType: "string[]",
            name: "labels",
            type: "string[]",
          },
        ],
        internalType: "struct IAddressBook.Entry[]",
        name: "newEntries",
        type: "tuple[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum IAddressBook.Tipology",
        name: "tipology",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "entryAddress",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "labels",
        type: "string[]",
      },
    ],
    name: "addEntry",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum IAddressBook.Tipology",
            name: "tipology",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "entryAddress",
            type: "address",
          },
          {
            internalType: "string[]",
            name: "labels",
            type: "string[]",
          },
        ],
        internalType: "struct IAddressBook.Entry",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "deleteEntry",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum IAddressBook.Tipology",
            name: "tipology",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "entryAddress",
            type: "address",
          },
          {
            internalType: "string[]",
            name: "labels",
            type: "string[]",
          },
        ],
        internalType: "struct IAddressBook.Entry",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "entries",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum IAddressBook.Tipology",
        name: "tipology",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "entryAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEntries",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum IAddressBook.Tipology",
            name: "tipology",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "entryAddress",
            type: "address",
          },
          {
            internalType: "string[]",
            name: "labels",
            type: "string[]",
          },
        ],
        internalType: "struct IAddressBook.Entry[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getEntry",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum IAddressBook.Tipology",
            name: "tipology",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "entryAddress",
            type: "address",
          },
          {
            internalType: "string[]",
            name: "labels",
            type: "string[]",
          },
        ],
        internalType: "struct IAddressBook.Entry",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "enum IAddressBook.Tipology",
        name: "tipology",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "entryAddress",
        type: "address",
      },
      {
        internalType: "string[]",
        name: "labels",
        type: "string[]",
      },
    ],
    name: "updateEntry",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "enum IAddressBook.Tipology",
            name: "tipology",
            type: "uint8",
          },
          {
            internalType: "address",
            name: "entryAddress",
            type: "address",
          },
          {
            internalType: "string[]",
            name: "labels",
            type: "string[]",
          },
        ],
        internalType: "struct IAddressBook.Entry",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50336001600160a01b031663890357306040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000051573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200007791906200009d565b600080546001600160a01b0319166001600160a01b0392909216919091179055620000cf565b600060208284031215620000b057600080fd5b81516001600160a01b0381168114620000c857600080fd5b9392505050565b61217880620000df6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063bae78d7b1161005b578063bae78d7b14610132578063cde9cf4c14610145578063d5f91dc414610158578063f847d79c1461016b57600080fd5b806311f7516c1461008d57806317be85c3146100b65780638da5cb5b146100cb578063b30906d414610110575b600080fd5b6100a061009b3660046116ae565b61017e565b6040516100ad919061185a565b60405180910390f35b6100be610247565b6040516100ad9190611874565b6000546100eb9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ad565b61012361011e3660046116ae565b610466565b6040516100ad939291906118f4565b6100a06101403660046116ae565b610543565b6100be610153366004611986565b610761565b6100a0610166366004611abf565b610954565b6100a0610179366004611b5d565b610a66565b6101aa604080516080810190915260608152602081016000815260006020820152606060409091015290565b60005473ffffffffffffffffffffffffffffffffffffffff1633146101fb576040517f17e44b9300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001548210610236576040517fba8fc29200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61023f82610b36565b90505b919050565b60606001805480602002602001604051908101604052809291908181526020016000905b8282101561045d578382906000526020600020906003020160405180608001604052908160008201805461029e90611bf1565b80601f01602080910402602001604051908101604052809291908181526020018280546102ca90611bf1565b80156103175780601f106102ec57610100808354040283529160200191610317565b820191906000526020600020905b8154815290600101906020018083116102fa57829003601f168201915b505050918352505060018281015460209092019160ff169081111561033e5761033e611732565b600181111561034f5761034f611732565b81526001820154610100900473ffffffffffffffffffffffffffffffffffffffff16602080830191909152600283018054604080518285028101850182528281529401939260009084015b828210156104465783829060005260206000200180546103b990611bf1565b80601f01602080910402602001604051908101604052809291908181526020018280546103e590611bf1565b80156104325780601f1061040757610100808354040283529160200191610432565b820191906000526020600020905b81548152906001019060200180831161041557829003601f168201915b50505050508152602001906001019061039a565b50505050815250508152602001906001019061026b565b50505050905090565b6001818154811061047657600080fd5b906000526020600020906003020160009150905080600001805461049990611bf1565b80601f01602080910402602001604051908101604052809291908181526020018280546104c590611bf1565b80156105125780601f106104e757610100808354040283529160200191610512565b820191906000526020600020905b8154815290600101906020018083116104f557829003601f168201915b5050506001909301549192505060ff81169073ffffffffffffffffffffffffffffffffffffffff6101009091041683565b61056f604080516080810190915260608152602081016000815260006020820152606060409091015290565b6001828154811061058257610582611c44565b90600052602060002090600302016040518060800160405290816000820180546105ab90611bf1565b80601f01602080910402602001604051908101604052809291908181526020018280546105d790611bf1565b80156106245780601f106105f957610100808354040283529160200191610624565b820191906000526020600020905b81548152906001019060200180831161060757829003601f168201915b505050918352505060018281015460209092019160ff169081111561064b5761064b611732565b600181111561065c5761065c611732565b81526001820154610100900473ffffffffffffffffffffffffffffffffffffffff16602080830191909152600283018054604080518285028101850182528281529401939260009084015b828210156107535783829060005260206000200180546106c690611bf1565b80601f01602080910402602001604051908101604052809291908181526020018280546106f290611bf1565b801561073f5780601f106107145761010080835404028352916020019161073f565b820191906000526020600020905b81548152906001019060200180831161072257829003601f168201915b5050505050815260200190600101906106a7565b505050915250909392505050565b60005460609073ffffffffffffffffffffffffffffffffffffffff1633146107b5576040517f17e44b9300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8767ffffffffffffffff8111156107ce576107ce611c73565b60405190808252806020026020018201604052801561082b57816020015b610818604080516080810190915260608152602081016000815260006020820152606060409091015290565b8152602001906001900390816107ec5790505b50905060005b88811015610947576109178a8a8381811061084e5761084e611c44565b90506020028101906108609190611ca2565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508c92508b91508590508181106108a9576108a9611c44565b90506020020160208101906108be9190611d07565b8888858181106108d0576108d0611c44565b90506020020160208101906108e59190611d22565b8787868181106108f7576108f7611c44565b90506020028101906109099190611d3d565b61091291611df4565b610f63565b82828151811061092957610929611c44565b6020026020010181905250808061093f90611f16565b915050610831565b5098975050505050505050565b610980604080516080810190915260608152602081016000815260006020820152606060409091015290565b60005473ffffffffffffffffffffffffffffffffffffffff1633146109d1576040517f17e44b9300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001548810610a0c576040517fba8fc29200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a5a8888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250899150610a5590508789611df4565b611147565b98975050505050505050565b610a92604080516080810190915260608152602081016000815260006020820152606060409091015290565b60005473ffffffffffffffffffffffffffffffffffffffff163314610ae3576040517f17e44b9300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610b2b87878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525089925088915061091290508688611df4565b979650505050505050565b610b62604080516080810190915260608152602081016000815260006020820152606060409091015290565b60018281548110610b7557610b75611c44565b9060005260206000209060030201604051806080016040529081600082018054610b9e90611bf1565b80601f0160208091040260200160405190810160405280929190818152602001828054610bca90611bf1565b8015610c175780601f10610bec57610100808354040283529160200191610c17565b820191906000526020600020905b815481529060010190602001808311610bfa57829003601f168201915b505050918352505060018281015460209092019160ff1690811115610c3e57610c3e611732565b6001811115610c4f57610c4f611732565b81526001820154610100900473ffffffffffffffffffffffffffffffffffffffff16602080830191909152600283018054604080518285028101850182528281529401939260009084015b82821015610d46578382906000526020600020018054610cb990611bf1565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce590611bf1565b8015610d325780601f10610d0757610100808354040283529160200191610d32565b820191906000526020600020905b815481529060010190602001808311610d1557829003601f168201915b505050505081526020019060010190610c9a565b5050509152505060018054919250600091610d619190611f4e565b9050808314610e835760018181548110610d7d57610d7d611c44565b906000526020600020906003020160018481548110610d9e57610d9e611c44565b90600052602060002090600302016000820181600001908054610dc090611bf1565b610dcb929190611473565b50600182810154828201805460ff9092169290917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016908381811115610e1357610e13611732565b021790555060018281015490820180547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101009283900473ffffffffffffffffffffffffffffffffffffffff1690920291909117905560028083018054610e7f92840191906114fe565b5050505b6001805480610e9457610e94611f65565b6000828152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191600383020190610ed28282611560565b6001820180547fffffffffffffffffffffff000000000000000000000000000000000000000000169055610f0a60028301600061159d565b50509055823073ffffffffffffffffffffffffffffffffffffffff167f8a412a25a9a4e9824101241641b54fc08a74dee75b1ac9b445f632b26de812e384604051610f55919061185a565b60405180910390a350919050565b610f8f604080516080810190915260608152602081016000815260006020820152606060409091015290565b84815260208101846001811115610fa857610fa8611732565b90816001811115610fbb57610fbb611732565b90525073ffffffffffffffffffffffffffffffffffffffff83166040820152606081018290526001805480820182556000919091528151805183926003027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6019161102b918391602001906115bb565b5060208201516001808301805490917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0090911690838181111561107057611070611732565b0217905550604082015160018201805473ffffffffffffffffffffffffffffffffffffffff909216610100027fffffffffffffffffffffff0000000000000000000000000000000000000000ff909216919091179055606082015180516110e191600284019160209091019061162f565b5050600180546110f19250611f4e565b3073ffffffffffffffffffffffffffffffffffffffff167fbfcce9c75d460beaf93f8724c3ab61eb7dd92e037e4cc0ed1a29ca28852b0f0a83604051611137919061185a565b60405180910390a3949350505050565b611173604080516080810190915260608152602081016000815260006020820152606060409091015290565b60006001878154811061118857611188611c44565b6000918252602091829020885160039092020192506111ac918391908901906115bb565b506001808201805487927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff009091169083818111156111ec576111ec611732565b02179055506001810180547fffffffffffffffffffffff0000000000000000000000000000000000000000ff1661010073ffffffffffffffffffffffffffffffffffffffff871602179055825161124c906002830190602086019061162f565b50863073ffffffffffffffffffffffffffffffffffffffff167f1a00c599480181f2de1f4d551e5e85fdbe2d00629834f0e53b49e114420ae7d183604051611294919061206a565b60405180910390a3806040518060800160405290816000820180546112b890611bf1565b80601f01602080910402602001604051908101604052809291908181526020018280546112e490611bf1565b80156113315780601f1061130657610100808354040283529160200191611331565b820191906000526020600020905b81548152906001019060200180831161131457829003601f168201915b505050918352505060018281015460209092019160ff169081111561135857611358611732565b600181111561136957611369611732565b81526001820154610100900473ffffffffffffffffffffffffffffffffffffffff16602080830191909152600283018054604080518285028101850182528281529401939260009084015b828210156114605783829060005260206000200180546113d390611bf1565b80601f01602080910402602001604051908101604052809291908181526020018280546113ff90611bf1565b801561144c5780601f106114215761010080835404028352916020019161144c565b820191906000526020600020905b81548152906001019060200180831161142f57829003601f168201915b5050505050815260200190600101906113b4565b5050509152509098975050505050505050565b82805461147f90611bf1565b90600052602060002090601f0160209004810192826114a157600085556114ee565b82601f106114b257805485556114ee565b828001600101855582156114ee57600052602060002091601f016020900482015b828111156114ee5782548255916001019190600101906114d3565b506114fa92915061167c565b5090565b8280548282559060005260206000209081019282156115545760005260206000209182015b8281111561155457828290805461153990611bf1565b611544929190611473565b5091600101919060010190611523565b506114fa929150611691565b50805461156c90611bf1565b6000825580601f1061157c575050565b601f01602090049060005260206000209081019061159a919061167c565b50565b508054600082559060005260206000209081019061159a9190611691565b8280546115c790611bf1565b90600052602060002090601f0160209004810192826115e957600085556114ee565b82601f1061160257805160ff19168380011785556114ee565b828001600101855582156114ee579182015b828111156114ee578251825591602001919060010190611614565b828054828255906000526020600020908101928215611554579160200282015b82811115611554578251805161166c9184916020909101906115bb565b509160200191906001019061164f565b5b808211156114fa576000815560010161167d565b808211156114fa5760006116a58282611560565b50600101611691565b6000602082840312156116c057600080fd5b5035919050565b6000815180845260005b818110156116ed576020818501810151868301820152016116d1565b818111156116ff576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110611798577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b60008151608084526117b160808501826116c7565b90506020808401516117c582870182611761565b5073ffffffffffffffffffffffffffffffffffffffff6040850151166040860152606084015185830360608701528281518085528385019150838160051b860101848401935060005b82811015610947577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08783030184526118488286516116c7565b9486019493860193915060010161180e565b60208152600061186d602083018461179c565b9392505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156118e7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08886030184526118d585835161179c565b9450928501929085019060010161189b565b5092979650505050505050565b60608152600061190760608301866116c7565b90506119166020830185611761565b73ffffffffffffffffffffffffffffffffffffffff83166040830152949350505050565b60008083601f84011261194c57600080fd5b50813567ffffffffffffffff81111561196457600080fd5b6020830191508360208260051b850101111561197f57600080fd5b9250929050565b6000806000806000806000806080898b0312156119a257600080fd5b883567ffffffffffffffff808211156119ba57600080fd5b6119c68c838d0161193a565b909a50985060208b01359150808211156119df57600080fd5b6119eb8c838d0161193a565b909850965060408b0135915080821115611a0457600080fd5b611a108c838d0161193a565b909650945060608b0135915080821115611a2957600080fd5b50611a368b828c0161193a565b999c989b5096995094979396929594505050565b60008083601f840112611a5c57600080fd5b50813567ffffffffffffffff811115611a7457600080fd5b60208301915083602082850101111561197f57600080fd5b80356002811061024257600080fd5b803573ffffffffffffffffffffffffffffffffffffffff8116811461024257600080fd5b600080600080600080600060a0888a031215611ada57600080fd5b87359650602088013567ffffffffffffffff80821115611af957600080fd5b611b058b838c01611a4a565b9098509650869150611b1960408b01611a8c565b9550611b2760608b01611a9b565b945060808a0135915080821115611b3d57600080fd5b50611b4a8a828b0161193a565b989b979a50959850939692959293505050565b60008060008060008060808789031215611b7657600080fd5b863567ffffffffffffffff80821115611b8e57600080fd5b611b9a8a838b01611a4a565b9098509650869150611bae60208a01611a8c565b9550611bbc60408a01611a9b565b94506060890135915080821115611bd257600080fd5b50611bdf89828a0161193a565b979a9699509497509295939492505050565b600181811c90821680611c0557607f821691505b602082108103611c3e577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611cd757600080fd5b83018035915067ffffffffffffffff821115611cf257600080fd5b60200191503681900382131561197f57600080fd5b600060208284031215611d1957600080fd5b61186d82611a8c565b600060208284031215611d3457600080fd5b61186d82611a9b565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112611d7257600080fd5b83018035915067ffffffffffffffff821115611d8d57600080fd5b6020019150600581901b360382131561197f57600080fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715611dec57611dec611c73565b604052919050565b600067ffffffffffffffff80841115611e0f57611e0f611c73565b8360051b6020611e20818301611da5565b868152918501918181019036841115611e3857600080fd5b865b84811015611edb57803586811115611e525760008081fd5b8801601f3681830112611e655760008081fd5b813588811115611e7757611e77611c73565b611ea6877fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08484011601611da5565b91508082523687828501011115611ebd5760008081fd5b80878401888401376000908201870152845250918301918301611e3a565b50979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f4757611f47611ee7565b5060010190565b600082821015611f6057611f60611ee7565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b8054600090600181811c9080831680611fae57607f831692505b60208084108203611fe8577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b8388526020880182801561200357600181146120325761205d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0087168252828201975061205d565b60008981526020902060005b878110156120575781548482015290860190840161203e565b83019850505b5050505050505092915050565b6000602080835260808184015261208460a0840185611f94565b60018086015461209a6040870160ff8316611761565b73ffffffffffffffffffffffffffffffffffffffff8160081c16606087015250600286017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808785030160808801528382548086528686019150868160051b8701018460005287600020945060005b8281101561213357848883030184526121228287611f94565b958701959389019391508601612109565b509a995050505050505050505056fea2646970667358221220e92281d0ee9caad8be426d70a6d22d769e91c9ad1be25287faf343da5cb8140b64736f6c634300080d0033";

type AddressBookConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AddressBookConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AddressBook__factory extends ContractFactory {
  constructor(...args: AddressBookConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AddressBook> {
    return super.deploy(overrides || {}) as Promise<AddressBook>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AddressBook {
    return super.attach(address) as AddressBook;
  }
  override connect(signer: Signer): AddressBook__factory {
    return super.connect(signer) as AddressBook__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AddressBookInterface {
    return new utils.Interface(_abi) as AddressBookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AddressBook {
    return new Contract(address, _abi, signerOrProvider) as AddressBook;
  }
}
