/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Subscriptions, SubscriptionsInterface } from "../Subscriptions";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "OutOfBounds",
    type: "error",
  },
  {
    inputs: [],
    name: "SubscriptionNotFound",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "book",
        type: "address",
      },
    ],
    name: "Subscribed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "book",
        type: "address",
      },
    ],
    name: "Unsubscribed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "book",
        type: "address",
      },
    ],
    name: "_indexOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "book",
        type: "address",
      },
    ],
    name: "subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "subscriptions",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "book",
        type: "address",
      },
    ],
    name: "unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506105ff806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806341a7726a146100515780635e709f9814610066578063623da3d1146100935780637262561c146100cb575b600080fd5b61006461005f3660046104d0565b6100de565b005b6100796100743660046104d0565b6101b2565b604080519283529015156020830152015b60405180910390f35b6100a66100a13660046104f2565b610258565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161008a565b6100646100d93660046104d0565b61029d565b60006100e9826101b2565b9150508015610124576040517f1a00354f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600081815260208181526040808320805460018101825590845291832090910180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff871690811790915590519092917f5af76814d21ef4a656d75bdbdb9cc3efa85af5efca9dbca0397824217d9344b791a35050565b60008060005b3360009081526020819052604090205481101561024c57336000908152602081905260409020805473ffffffffffffffffffffffffffffffffffffffff86169190839081106102095761020961051c565b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff160361023a579360019350915050565b806102448161057a565b9150506101b8565b50600093849350915050565b6000602052816000526040600020818154811061027457600080fd5b60009182526020909120015473ffffffffffffffffffffffffffffffffffffffff169150829050565b6000806102a9836101b2565b91509150806102e4576040517f1a00354f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6102ed82610335565b60405173ffffffffffffffffffffffffffffffffffffffff84169033907f7773c30acd0762ed6b4b92a9aa2c6b3c074e29ad93b334cbed8ba807c596f13a90600090a3505050565b33600090815260208190526040902054811061037d576040517fb4120f1400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600090815260208190526040812054610399906001906105b2565b9050808214610451573360009081526020819052604090208054829081106103c3576103c361051c565b6000918252602080832090910154338352908290526040909120805473ffffffffffffffffffffffffffffffffffffffff90921691849081106104085761040861051c565b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b3360009081526020819052604090208054829081106104725761047261051c565b600091825260209091200180547fffffffffffffffffffffffff00000000000000000000000000000000000000001690555050565b803573ffffffffffffffffffffffffffffffffffffffff811681146104cb57600080fd5b919050565b6000602082840312156104e257600080fd5b6104eb826104a7565b9392505050565b6000806040838503121561050557600080fd5b61050e836104a7565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036105ab576105ab61054b565b5060010190565b6000828210156105c4576105c461054b565b50039056fea26469706673582212209409b272afe347a08d733d1c4c545c9a380331422fd4223762e3ecb51a31637964736f6c634300080d0033";

type SubscriptionsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubscriptionsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Subscriptions__factory extends ContractFactory {
  constructor(...args: SubscriptionsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Subscriptions> {
    return super.deploy(overrides || {}) as Promise<Subscriptions>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Subscriptions {
    return super.attach(address) as Subscriptions;
  }
  override connect(signer: Signer): Subscriptions__factory {
    return super.connect(signer) as Subscriptions__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscriptionsInterface {
    return new utils.Interface(_abi) as SubscriptionsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Subscriptions {
    return new Contract(address, _abi, signerOrProvider) as Subscriptions;
  }
}
